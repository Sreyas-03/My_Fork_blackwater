Search.setIndex({"docnames": ["apidocs/data", "apidocs/index", "apidocs/library", "apidocs/metrics", "apidocs/primitives", "apidocs/rl", "guides/01_encoders", "guides/03_data_io", "guides/index", "index", "stubs/blackwater.data.DefaultCircuitEncoder", "stubs/blackwater.data.DefaultNumpyEstimatorInputEncoder", "stubs/blackwater.data.DefaultOperatorEncoder", "stubs/blackwater.data.DefaultPyGBackendEncoder", "stubs/blackwater.data.DefaultPyGCircuitEncoder", "stubs/blackwater.library.SimpleExpectationValueModel", "stubs/blackwater.metrics.improvement_factor", "stubs/blackwater.primitives.BlackWaterEstimatorModel", "stubs/blackwater.primitives.ScikitLearnEstimatorModel", "stubs/blackwater.primitives.TorchGeometricEstimatorModel", "stubs/blackwater.primitives.learning_estimator", "stubs/blackwater.rl.QuantumCircuitBuilderEnv", "stubs/blackwater.rl.UnitarySynthesisEnv", "tutorials/01_ngem", "tutorials/index"], "filenames": ["apidocs/data.rst", "apidocs/index.rst", "apidocs/library.rst", "apidocs/metrics.rst", "apidocs/primitives.rst", "apidocs/rl.rst", "guides/01_encoders.ipynb", "guides/03_data_io.ipynb", "guides/index.rst", "index.rst", "stubs/blackwater.data.DefaultCircuitEncoder.rst", "stubs/blackwater.data.DefaultNumpyEstimatorInputEncoder.rst", "stubs/blackwater.data.DefaultOperatorEncoder.rst", "stubs/blackwater.data.DefaultPyGBackendEncoder.rst", "stubs/blackwater.data.DefaultPyGCircuitEncoder.rst", "stubs/blackwater.library.SimpleExpectationValueModel.rst", "stubs/blackwater.metrics.improvement_factor.rst", "stubs/blackwater.primitives.BlackWaterEstimatorModel.rst", "stubs/blackwater.primitives.ScikitLearnEstimatorModel.rst", "stubs/blackwater.primitives.TorchGeometricEstimatorModel.rst", "stubs/blackwater.primitives.learning_estimator.rst", "stubs/blackwater.rl.QuantumCircuitBuilderEnv.rst", "stubs/blackwater.rl.UnitarySynthesisEnv.rst", "tutorials/01_ngem.ipynb", "tutorials/index.rst"], "titles": ["Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">blackwater.data</span></code>)", "BlackWater API References", "Library (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">blackwater.library</span></code>)", "Metrics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">blackwater.metrics</span></code>)", "Primitives (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">blackwater.primitives</span></code>)", "RL (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">blackwater.rl</span></code>)", "Guide: graph encoders", "Guide: data writing and loading", "&lt;no title&gt;", "BlackWater", "blackwater.data.DefaultCircuitEncoder", "blackwater.data.DefaultNumpyEstimatorInputEncoder", "blackwater.data.DefaultOperatorEncoder", "blackwater.data.DefaultPyGBackendEncoder", "blackwater.data.DefaultPyGCircuitEncoder", "blackwater.library.SimpleExpectationValueModel", "blackwater.metrics.improvement_factor", "blackwater.primitives.BlackWaterEstimatorModel", "blackwater.primitives.ScikitLearnEstimatorModel", "blackwater.primitives.TorchGeometricEstimatorModel", "blackwater.primitives.learning_estimator", "blackwater.rl.QuantumCircuitBuilderEnv", "blackwater.rl.UnitarySynthesisEnv", "Tutorial: NGEM - Neural graph error mitigation", "&lt;no title&gt;"], "terms": {"primit": [1, 9, 23], "data": [1, 6, 9, 17, 18, 19, 23], "metric": [1, 9], "librari": [1, 9, 23], "rl": [1, 9], "5": [6, 7, 23], "from": [6, 7, 23], "qiskit": [6, 7, 23], "import": [6, 7, 23], "quantumcircuit": [6, 7], "transpil": [6, 7, 20, 23], "provid": [6, 7, 23], "fake_provid": [6, 7, 23], "fakelimav2": [6, 7, 23], "blackwat": [6, 7, 23], "graph_util": [6, 7, 23], "circuit_to_json_graph": 6, "backend_to_json_graph": 6, "backendnodeencod": 6, "6": [6, 7, 23], "circuit": [6, 7, 10, 11, 14, 16, 21, 23], "2": [6, 7, 16, 22, 23], "h": [6, 7, 23], "0": [6, 7, 16, 23], "cx": [6, 7], "1": [6, 7, 16, 23], "measure_al": [6, 7], "draw": [6, 7], "q_0": [6, 7], "m": [6, 7], "q_1": [6, 7], "x": [6, 7, 23], "mea": [6, 7], "7": [6, 7, 23], "json": [6, 7, 23], "graphdata": [6, 7], "node": [6, 7, 14, 15], "edg": [6, 7], "4": [6, 7, 23], "3": [6, 7, 22, 23], "edge_featur": [6, 7], "8": [6, 7, 23], "us": [6, 9, 14, 16, 23], "backend": [6, 7, 13, 14, 20, 23], "fake_lima": [6, 7, 23], "transpiled_circuit": [6, 7, 23], "node_encod": 6, "5707963267948966": [6, 7], "9698643286635694e": [6, 7], "05": [6, 7], "9": [6, 7, 23], "355584184359312e": [6, 7], "305997230317399e": [6, 7], "00011553074510239035": [6, 7], "5029685549": [6, 7], "923759": [6, 7], "5128321697": [6, 7], "435369": [6, 7], "00010377694598809795": [6, 7], "477169960638749e": [6, 7], "5247491310": [6, 7], "11471": [6, 7], "358447375590962e": [6, 7], "645933441447346e": [6, 7], "5303339662": [6, 7], "601714": [6, 7], "7543975812787366e": [6, 7], "6441110002077736e": [6, 7], "5091790567": [6, 7], "452984": [6, 7], "11": [6, 23], "quantum_info": [6, 7, 23], "sparsepauliop": [6, 7, 23], "torch_geometr": [6, 23], "expvaldata": [6, 7, 23], "12": [6, 23], "13": [6, 7, 23], "oper": [6, 7, 12, 22, 23], "zzz": [6, 7], "exp_val": [6, 7], "14": [6, 7], "creat": [6, 7, 23], "exp": [6, 7, 15, 23], "val": [6, 7], "dataclass": [6, 7, 23], "exp_val_data": [6, 7, 23], "build": [6, 7, 22, 23], "expectation_valu": [6, 7, 23], "observ": [6, 7, 11, 16, 23], "circuit_depth": [6, 7, 23], "operatordata": [6, 7], "15": [6, 23], "convert": 6, "pytorch": [6, 13, 14, 19, 23], "geometr": [6, 13, 14, 19], "to_pyg": 6, "22": [6, 7, 23], "edge_index": [6, 7, 23], "edge_attr": [6, 7, 23], "y": [6, 7, 23], "backend_nod": [6, 7, 23], "backend_edg": [6, 7, 23], "backend_edge_featur": [6, 7, 23], "encod": [7, 9, 10, 11, 12, 13, 14, 17, 18, 19, 23], "dataio": [7, 23], "expvaldatawrit": [7, 23], "loader": [7, 23], "expvaldataset": [7, 23], "writer": [7, 23], "save": 7, "file": [7, 23], "save_to_fil": [7, 23], "path": [7, 23], "iter": 7, "through": 7, "entri": [7, 23], "dataload": [7, 23], "print": [7, 23], "solv": 9, "quantum": [9, 21], "comput": 9, "problem": [9, 16], "machin": 9, "learn": [9, 11, 17, 18, 19, 20, 23], "The": [9, 23], "sourc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "code": 9, "project": 9, "i": [9, 23], "avail": 9, "github": [9, 23], "instal": [9, 23], "pip": [9, 23], "tutori": 9, "ngem": 9, "neural": 9, "graph": 9, "error": 9, "mitig": [9, 15, 16], "guid": 9, "write": 9, "load": [9, 23], "api": 9, "refer": 9, "class": [10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22], "default": [10, 12, 13, 14], "transform": [10, 11], "numpi": [10, 11, 12, 18, 23], "arrai": [10, 11, 12, 23], "train": [10, 22, 23], "return": [10, 16, 20], "first": 10, "element": 10, "depth": [10, 23], "second": 10, "2q": 10, "3rd": 10, "number": [10, 15], "1q": 10, "gate": 10, "4th": 10, "5th": 10, "num": [10, 15], "qubit": 10, "type": [10, 20], "where": 10, "__init__": [10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22], "method": [10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22], "standard": 11, "estim": [11, 17, 20, 23], "turn": [12, 13, 14, 20], "pyg": [13, 14], "constructor": [14, 17, 18, 19, 22], "paramet": [14, 15, 16, 17, 18, 19, 20, 22, 23], "option": [14, 20], "backendv2": [14, 20], "Will": 14, "num_node_featur": [15, 23], "num_obs_featur": [15, 23], "hidden_channel": [15, 23], "simpl": 15, "model": [15, 17, 18, 19, 20, 22, 23], "valu": [15, 23], "int": [15, 23], "featur": [15, 23], "ob": 15, "channel": 15, "hidden": 15, "layer": 15, "attribut": [15, 21, 22], "n_shot": 16, "n_mitigation_shot": 16, "calcul": 16, "improv": 16, "factor": [16, 23], "see": 16, "http": [16, 23], "arxiv": 16, "org": 16, "pdf": 16, "2210": 16, "07194": 16, "exampl": [16, 22], "trial": 16, "noisi": [16, 23], "ideal_exp_valu": 16, "list": 16, "pair": 16, "associ": 16, "shot": 16, "evalu": 16, "base": [17, 18, 19, 21], "dataencod": [17, 18, 19], "input": 17, "scikit": 18, "scikitlearnestimatormodel": [19, 23], "modul": 19, "torch": [19, 22, 23], "cl": 20, "skip_transpil": [20, 23], "fals": [20, 23], "none": [20, 22, 23], "decor": 20, "baseestim": 20, "blackwaterestimatormodel": 20, "bool": 20, "skip": 20, "env_config": [21, 22], "builder": 21, "gymnasium": 21, "env": [21, 22, 23], "instruction_set": 22, "xgate": 22, "cxgate": 22, "hgate": 22, "u3gat": 22, "\u03b8": 22, "\u03c6": 22, "\u03bb": 22, "render_mod": 22, "consol": 22, "random_circuit": [22, 23], "n_qubit": [22, 23], "n_instruct": 22, "20": [22, 23], "config": 22, "ppoconfig": 22, "environ": 22, "framework": 22, "result": [22, 23], "dict": 22, "str": 22, "ani": [22, 23], "configur": 22, "seaborn": 23, "collect": 23, "download": 23, "py3": 23, "whl": 23, "metadata": 23, "kb": 23, "requir": 23, "alreadi": 23, "satisfi": 23, "24": 23, "gt": 23, "opt": 23, "anaconda3": 23, "lib": 23, "python3": 23, "site": 23, "packag": 23, "26": 23, "panda": 23, "matplotlib": 23, "contourpi": 23, "cycler": 23, "10": 23, "fonttool": 23, "51": 23, "kiwisolv": 23, "pillow": 23, "pypars": 23, "python": 23, "dateutil": 23, "importlib": 23, "resourc": 23, "pytz": 23, "2020": 23, "2024": 23, "tzdata": 23, "2022": 23, "zipp": 23, "17": 23, "six": 23, "16": 23, "294": 23, "mb": 23, "": 23, "eta": 23, "00": 23, "00a": 23, "01": 23, "successfulli": 23, "o": 23, "pathlib": 23, "random": 23, "backendestim": 23, "ideal_estim": 23, "noisy_esim": 23, "data_fold": 23, "mkdir": 23, "parent": 23, "true": 23, "exist_ok": 23, "gener": 23, "n_file": 23, "n_entries_per_fil": 23, "100": 23, "zzzzz": 23, "ziiiz": 23, "idx": 23, "rang": 23, "f": 23, "process": 23, "_": 23, "ideal_exp_v": 23, "run": 23, "noisy_exp_v": 23, "append": 23, "save_path": 23, "join": 23, "_entri": 23, "glob": 23, "split": 23, "len": 23, "train_path": 23, "val_path": 23, "batch_siz": 23, "32": 23, "train_load": 23, "shuffl": 23, "val_load": 23, "break": 23, "databatch": 23, "847": 23, "1795": 23, "948": 23, "21": 23, "160": 23, "64": 23, "256": 23, "batch": 23, "ptr": 23, "33": 23, "simpleexpectationvaluemodel": 23, "optim": 23, "adam": 23, "lr_schedul": 23, "reducelronplateau": 23, "criterion": 23, "nn": 23, "mseloss": 23, "lr": 23, "001": 23, "schedul": 23, "min": 23, "patienc": 23, "verbos": 23, "min_lr": 23, "00001": 23, "py": 23, "28": 23, "userwarn": 23, "deprec": 23, "pleas": 23, "get_last_lr": 23, "access": 23, "rate": 23, "warn": 23, "34": 23, "np": 23, "min_valid_loss": 23, "inf": 23, "train_loss": 23, "val_loss": 23, "n_epoch": 23, "epoch": 23, "enumer": 23, "zero_grad": 23, "tensor_split": 23, "dim": 23, "out": 23, "loss": 23, "item": 23, "backward": 23, "step": 23, "valid_loss": 23, "eval": 23, "util": 23, "spars": 23, "268": 23, "csr": 23, "tensor": 23, "support": 23, "beta": 23, "state": 23, "If": 23, "you": 23, "miss": 23, "function": 23, "submit": 23, "request": 23, "com": 23, "issu": 23, "trigger": 23, "intern": 23, "user": 23, "runner": 23, "work": 23, "aten": 23, "src": 23, "sparsecsrtensorimpl": 23, "cpp": 23, "55": 23, "adj": 23, "sparse_csr_tensor": 23, "visual": 23, "pd": 23, "pyplot": 23, "plt": 23, "sn": 23, "plot": 23, "label": 23, "yscale": 23, "log": 23, "legend": 23, "show": 23, "distanc": 23, "ideal": 23, "ngm_mitig": 23, "zip": 23, "tolist": 23, "mean": 23, "dist_noisi": 23, "ab": 23, "dist_ngm": 23, "df": 23, "datafram": 23, "boxplot": 23, "orient": 23, "showflier": 23, "titl": 23, "dist": 23, "histplot": 23, "kde": 23, "bin": 23, "40": 23, "distribut": 23, "learning_esim": 23, "learning_estim": 23, "torchgeometricestimatormodel": 23, "defaultpygestimatorencod": 23, "estimatorresult": 23, "59029901": 23, "39": 23, "original_valu": 23, "1102230246251565e": 23}, "objects": {"": [[1, 0, 0, "-", "blackwater"]], "blackwater": [[0, 0, 0, "-", "data"], [2, 0, 0, "-", "library"], [3, 0, 0, "-", "metrics"], [4, 0, 0, "-", "primitives"], [5, 0, 0, "-", "rl"]], "blackwater.data": [[10, 1, 1, "", "DefaultCircuitEncoder"], [11, 1, 1, "", "DefaultNumpyEstimatorInputEncoder"], [12, 1, 1, "", "DefaultOperatorEncoder"], [13, 1, 1, "", "DefaultPyGBackendEncoder"], [14, 1, 1, "", "DefaultPyGCircuitEncoder"]], "blackwater.data.DefaultCircuitEncoder": [[10, 2, 1, "", "__init__"]], "blackwater.data.DefaultNumpyEstimatorInputEncoder": [[11, 2, 1, "", "__init__"]], "blackwater.data.DefaultOperatorEncoder": [[12, 2, 1, "", "__init__"]], "blackwater.data.DefaultPyGBackendEncoder": [[13, 2, 1, "", "__init__"]], "blackwater.data.DefaultPyGCircuitEncoder": [[14, 2, 1, "", "__init__"]], "blackwater.library": [[15, 1, 1, "", "SimpleExpectationValueModel"]], "blackwater.library.SimpleExpectationValueModel": [[15, 2, 1, "", "__init__"]], "blackwater.metrics": [[16, 3, 1, "", "improvement_factor"]], "blackwater.primitives": [[17, 1, 1, "", "BlackWaterEstimatorModel"], [18, 1, 1, "", "ScikitLearnEstimatorModel"], [19, 1, 1, "", "TorchGeometricEstimatorModel"], [20, 3, 1, "", "learning_estimator"]], "blackwater.primitives.BlackWaterEstimatorModel": [[17, 2, 1, "", "__init__"]], "blackwater.primitives.ScikitLearnEstimatorModel": [[18, 2, 1, "", "__init__"]], "blackwater.primitives.TorchGeometricEstimatorModel": [[19, 2, 1, "", "__init__"]], "blackwater.rl": [[21, 1, 1, "", "QuantumCircuitBuilderEnv"], [22, 1, 1, "", "UnitarySynthesisEnv"]], "blackwater.rl.QuantumCircuitBuilderEnv": [[21, 2, 1, "", "__init__"]], "blackwater.rl.UnitarySynthesisEnv": [[22, 2, 1, "", "__init__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"data": [0, 7, 10, 11, 12, 13, 14], "blackwat": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "circuit": 0, "encod": [0, 6], "oper": 0, "backend": 0, "util": 0, "api": 1, "refer": 1, "librari": [2, 15], "metric": [3, 16], "primit": [4, 17, 18, 19, 20], "class": 4, "function": 4, "rl": [5, 21, 22], "guid": [6, 7], "graph": [6, 23], "write": 7, "load": 7, "defaultcircuitencod": 10, "defaultnumpyestimatorinputencod": 11, "defaultoperatorencod": 12, "defaultpygbackendencod": 13, "defaultpygcircuitencod": 14, "simpleexpectationvaluemodel": 15, "improvement_factor": 16, "blackwaterestimatormodel": 17, "scikitlearnestimatormodel": 18, "torchgeometricestimatormodel": 19, "learning_estim": 20, "quantumcircuitbuilderenv": 21, "unitarysynthesisenv": 22, "tutori": 23, "ngem": 23, "neural": 23, "error": 23, "mitig": 23}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Data (blackwater.data)": [[0, "data-blackwater-data"]], "Circuit encoders": [[0, "circuit-encoders"]], "Operator encoders": [[0, "operator-encoders"]], "Backend encoders": [[0, "backend-encoders"]], "Utilities": [[0, "utilities"]], "BlackWater API References": [[1, "blackwater-api-references"]], "Library (blackwater.library)": [[2, "library-blackwater-library"]], "Library": [[2, "library"]], "Metrics (blackwater.metrics)": [[3, "metrics-blackwater-metrics"]], "Metrics": [[3, "metrics"]], "Primitives (blackwater.primitives)": [[4, "primitives-blackwater-primitives"]], "Classes and functions": [[4, "classes-and-functions"]], "RL (blackwater.rl)": [[5, "rl-blackwater-rl"]], "RL": [[5, "rl"]], "Guide: graph encoders": [[6, "Guide:-graph-encoders"]], "Guide: data writing and loading": [[7, "Guide:-data-writing-and-loading"]], "BlackWater": [[9, "blackwater"]], "blackwater.data.DefaultCircuitEncoder": [[10, "blackwater-data-defaultcircuitencoder"]], "blackwater.data.DefaultNumpyEstimatorInputEncoder": [[11, "blackwater-data-defaultnumpyestimatorinputencoder"]], "blackwater.data.DefaultOperatorEncoder": [[12, "blackwater-data-defaultoperatorencoder"]], "blackwater.data.DefaultPyGBackendEncoder": [[13, "blackwater-data-defaultpygbackendencoder"]], "blackwater.data.DefaultPyGCircuitEncoder": [[14, "blackwater-data-defaultpygcircuitencoder"]], "blackwater.library.SimpleExpectationValueModel": [[15, "blackwater-library-simpleexpectationvaluemodel"]], "blackwater.metrics.improvement_factor": [[16, "blackwater-metrics-improvement-factor"]], "blackwater.primitives.BlackWaterEstimatorModel": [[17, "blackwater-primitives-blackwaterestimatormodel"]], "blackwater.primitives.ScikitLearnEstimatorModel": [[18, "blackwater-primitives-scikitlearnestimatormodel"]], "blackwater.primitives.TorchGeometricEstimatorModel": [[19, "blackwater-primitives-torchgeometricestimatormodel"]], "blackwater.primitives.learning_estimator": [[20, "blackwater-primitives-learning-estimator"]], "blackwater.rl.QuantumCircuitBuilderEnv": [[21, "blackwater-rl-quantumcircuitbuilderenv"]], "blackwater.rl.UnitarySynthesisEnv": [[22, "blackwater-rl-unitarysynthesisenv"]], "Tutorial: NGEM - Neural graph error mitigation": [[23, "Tutorial:-NGEM---Neural-graph-error-mitigation"]]}, "indexentries": {"blackwater.data": [[0, "module-blackwater.data"]], "module": [[0, "module-blackwater.data"], [1, "module-blackwater"], [2, "module-blackwater.library"], [3, "module-blackwater.metrics"], [4, "module-blackwater.primitives"], [5, "module-blackwater.rl"]], "blackwater": [[1, "module-blackwater"]], "blackwater.library": [[2, "module-blackwater.library"]], "blackwater.metrics": [[3, "module-blackwater.metrics"]], "blackwater.primitives": [[4, "module-blackwater.primitives"]], "blackwater.rl": [[5, "module-blackwater.rl"]], "defaultcircuitencoder (class in blackwater.data)": [[10, "blackwater.data.DefaultCircuitEncoder"]], "__init__() (defaultcircuitencoder method)": [[10, "blackwater.data.DefaultCircuitEncoder.__init__"]], "defaultnumpyestimatorinputencoder (class in blackwater.data)": [[11, "blackwater.data.DefaultNumpyEstimatorInputEncoder"]], "__init__() (defaultnumpyestimatorinputencoder method)": [[11, "blackwater.data.DefaultNumpyEstimatorInputEncoder.__init__"]], "defaultoperatorencoder (class in blackwater.data)": [[12, "blackwater.data.DefaultOperatorEncoder"]], "__init__() (defaultoperatorencoder method)": [[12, "blackwater.data.DefaultOperatorEncoder.__init__"]], "defaultpygbackendencoder (class in blackwater.data)": [[13, "blackwater.data.DefaultPyGBackendEncoder"]], "__init__() (defaultpygbackendencoder method)": [[13, "blackwater.data.DefaultPyGBackendEncoder.__init__"]], "defaultpygcircuitencoder (class in blackwater.data)": [[14, "blackwater.data.DefaultPyGCircuitEncoder"]], "__init__() (defaultpygcircuitencoder method)": [[14, "blackwater.data.DefaultPyGCircuitEncoder.__init__"]], "simpleexpectationvaluemodel (class in blackwater.library)": [[15, "blackwater.library.SimpleExpectationValueModel"]], "__init__() (simpleexpectationvaluemodel method)": [[15, "blackwater.library.SimpleExpectationValueModel.__init__"]], "improvement_factor() (in module blackwater.metrics)": [[16, "blackwater.metrics.improvement_factor"]], "blackwaterestimatormodel (class in blackwater.primitives)": [[17, "blackwater.primitives.BlackWaterEstimatorModel"]], "__init__() (blackwaterestimatormodel method)": [[17, "blackwater.primitives.BlackWaterEstimatorModel.__init__"]], "scikitlearnestimatormodel (class in blackwater.primitives)": [[18, "blackwater.primitives.ScikitLearnEstimatorModel"]], "__init__() (scikitlearnestimatormodel method)": [[18, "blackwater.primitives.ScikitLearnEstimatorModel.__init__"]], "torchgeometricestimatormodel (class in blackwater.primitives)": [[19, "blackwater.primitives.TorchGeometricEstimatorModel"]], "__init__() (torchgeometricestimatormodel method)": [[19, "blackwater.primitives.TorchGeometricEstimatorModel.__init__"]], "learning_estimator() (in module blackwater.primitives)": [[20, "blackwater.primitives.learning_estimator"]], "quantumcircuitbuilderenv (class in blackwater.rl)": [[21, "blackwater.rl.QuantumCircuitBuilderEnv"]], "__init__() (quantumcircuitbuilderenv method)": [[21, "blackwater.rl.QuantumCircuitBuilderEnv.__init__"]], "unitarysynthesisenv (class in blackwater.rl)": [[22, "blackwater.rl.UnitarySynthesisEnv"]], "__init__() (unitarysynthesisenv method)": [[22, "blackwater.rl.UnitarySynthesisEnv.__init__"]]}})